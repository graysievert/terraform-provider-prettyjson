# Simplified automated test execution workflow
name: Test Execution

on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
  push:
    branches:
      - main
      - master
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

env:
  GO_VERSION_FILE: 'go.mod'
  TEST_TIMEOUT: "15m"

jobs:
  test:
    name: Test (TF ${{ matrix.terraform }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # Only test minimum supported version and latest
        terraform: ['1.8.0', 'latest']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ env.GO_VERSION_FILE }}
          cache: true
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false

      - name: Make scripts executable
        run: |
          chmod +x ./scripts/platform-tests/automated-test-execution.sh
          chmod +x ./scripts/platform-tests/*.sh || true

      - name: Prepare and test
        run: |
          echo "Testing with Go $(go version) and Terraform $(terraform version)"
          
          # Prepare Go modules and build
          go mod download
          go mod verify
          go build -v .
          
          # Set TF_VERSION for version-specific tests
          export TF_VERSION="${{ matrix.terraform }}"
          
          # Run tests sequentially for reliability  
          ./scripts/platform-tests/automated-test-execution.sh \
            --suites "unit,acceptance,function,integration" \
            --no-parallel \
            --retry 2 \
            --timeout "$TEST_TIMEOUT" \
            --generate-report \
            --output-format "json,junit,github" \
            --verbose
          
          # Ensure test execution completed successfully
          if [ $? -ne 0 ]; then
            echo "Test execution failed"
            exit 1
          fi
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-tf-${{ matrix.terraform }}
          path: |
            test-reports/
          retention-days: 7
          
      - name: Add PR comment with results
        if: always() && github.event_name == 'pull_request'
        run: |
          if [ -f "test-reports/github-summary.md" ]; then
            echo "## Test Results (Terraform ${{ matrix.terraform }})" >> pr-comment.md
            cat test-reports/github-summary.md >> pr-comment.md
            echo "" >> pr-comment.md
          fi